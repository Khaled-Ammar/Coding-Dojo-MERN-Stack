cd c:/"Program Files"/MongoDB/Server/<version_number>/bin/
---------------------------------------------
mongo.exe

----------------------------------------------------------------------------------------------------------------------------------------------------



// Example:Insert
db.ninjas.insert({name: "Trey", belt: "black", status: "awesome"})

----------------------------------------------------------------------------------------------------------------------------------------------------

READ - Retrieving documents from a collection:

// Example:Find
db.ninjas.find({name: "Trey"})

--------------------------------------------------------------------------

MongoDB by default returns as many results as it can. If you want to just find all of the given collection, you can pass an empty object to the .
find method; or you can just not pass anything at all.

// Examples:
db.ninjas.find({})    
db.ninjas.find()
--------------------------------------------------------------------------

If you want to make the results look nicer and be easier to read:

// Example:
db.ninjas.find().pretty()

--------------------------------------------------------------------------

If I wanted to get all the Dojos whose number of students is greater than 15, I would run the following:

db.dojos.find({number_of_students: {$gt: 15}})



----------------------------------------------------------------------------------------------------------------------------------------------------


To remove an item from the database, we would run the following syntax:

// Pattern:
db.COLLECTION_NAME.remove({YOUR_QUERY_DOCUMENT}, BOOLEAN)
// Example
db.ninjas.remove({belt: "yellow"})
db.ninjas.remove({belt: "yellow"}, false) // this query would have the same effect as the one above.

----------------------------------------------------------------------------------------------------------------------------------------------------


UPDATE - Updating documents in a collection:
The update syntax can be tricky if you do not see it done correctly first. Let's say I wanted to add a location to the ninja whose name is Trey. I want to make his location equal to Mountain View. I would try to the following:

// Example:
db.ninjas.update({name: "Trey"}, {location: "Mountain View"})
copy

--------------------------------------------------------------------------

Then, to check to make sure if my update query was right, I'd run:

// Example:
db.ninjas.find({location: "Mountain View"}).pretty() 

----------------------------------------------------------------------------------------------------------------------------------------------------


If I wanted to get all the Dojos whose number of students is greater than 15, I would run the following:

db.dojos.find({number_of_students: {$gt: 15}})


----------------------------------------------------------------------------------------------------------------------------------------------------


And we wanted to add an element in the interests array. The operator we would use is called the $push operator, which should sound very familiar.
 To add the interest 'snowboarding' to the student document, we would run...

db.students.update({_id: ObjectId("5463d871a6a96d5ed6252f4d")}, {$push: {interests: 'snowboarding'}})

--------------------------------------------------------------------------